@model WebTinTuc.Models.EditModuleModel
@{
    ViewBag.Title = "Sửa module";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3>@ViewBag.Title</h3>
        </div>
        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

    </div>
</div>

@if (Model != null)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default box box-primary">
                <div class="panel-body">
                    @using (Html.BeginForm("EditModule", "Modules", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", role = "form", @id = "EditModule" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m=>m.ModuleId)
                        <div class="form-group">
                            @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.ModuleName, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModuleLink, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.ModuleLink, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ModuleLink, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HiddenModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(model => model.HiddenModuleName) Ẩn tên module này.
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TypeModule, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 select-editable">
                                @if (ViewBag.TypeModule != null)
                                {
                                    @Html.DropDownListFor(m => m.TypeModule, new SelectList(ViewBag.TypeModule, "Value", "Text"), "-Chọn kiểu module-", htmlAttributes: new { @class = "form-control", onchange = "this.nextElementSibling.value=this.value" })
                                    <input type="text" name="TypeModule" value="" />
                                }
                                @Html.HiddenFor(m => m.TypeModule, htmlAttributes: new { @id = "input_TypeModule" })
                                @Html.ValidationMessageFor(model => model.TypeModule, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <script>
                        $(document).ready(function () {
                            $('input[name="TypeModule"]').val($('#input_TypeModule').val());
                            $('#TypeModule').val($('#input_TypeModule').val());
                        })
                        </script>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (ViewBag.PositionModule != null)
                                {
                                    @Html.DropDownListFor(m => m.Position, new SelectList(ViewBag.PositionModule, "Value", "Text"), "-Chọn vị trí module-", new { @class = "form-control" })
                                }
                                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PositionIndex, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.PositionIndex, htmlAttributes: new { @class = "form-control", type = "number" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(model => model.Published) Mở/khóa module.
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Cập nhật" class="btn btn-primary" />
                                @Html.ActionLink("Xóa", "DeleteModule", new { id = Model.ModuleId }, htmlAttributes: new { @class = "btn btn-danger" }) 
                            </div>
                        </div>

                    }

                </div>
            </div>
        </div>
    </div>
}
else
{
    <span>Không tìm thấy Module</span>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            $('#Position').on('change', function () {
                var $val = $(this).val();
                var $output = $('input#PositionIndex');
                $output.empty();
                if ($val !== "" && $val.length > 0) {
                    $.ajax({
                        url: '@Url.Action("getIndexNewModule", "Modules")',
                        type: "POST",
                        async: true,
                        cache: false,
                        dataType: "json",
                        data: { po: $val },
                        success: function (data) {
                            $output.val(data);
                        },
                        error: function (error) {
                            alert('Mất kết nối tới máy chủ');
                        }
                    })
                }
            });
        })


    </script>
}