@model WebTinTuc.Models.LienketModel
@{
    ViewBag.Title = "Thêm liên kết";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section styles {
    @Styles.Render("~/Content/dropzonescss")
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3>@ViewBag.Title</h3>
        </div>
        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default box box-primary">
            <div class="panel-body">
                @using (Html.BeginForm("AddNewLink", "Links", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", role = "form", @id = "AddNewLink" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.LienKetName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.LienKetName, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LienKetName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LienKetUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.LienKetUrl, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsOption, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                <label>@Html.CheckBoxFor(model => model.IsOption) Liên kết kiểu options</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (ViewBag.Typetarget != null)
                            {
                                @Html.DropDownListFor(m => m.Target, new SelectList(ViewBag.Typetarget, "Value", "Text"), "-Chọn kiểu target-", new { @class = "form-control" })
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.ImageUrl, htmlAttributes: new { @class = "form-control" })
                            <img id="img_ImgUrl" class="img-responsive" style="height: 100px;" />
                        </div>
                    </div>

                    <script>
                        $(document).ready(function () {
                            $('#ImageUrl').on('change', function () {
                                $('img#img_ImgUrl').attr('src', $(this).val()).fadeIn();
                            })
                        })
                    </script>

                    

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Thêm mới" class="btn btn-primary" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Tải file</label>
                        <div class="col-md-8">
                            <div id="dZUpload" class="dropzone">
                                <div class="dz-default dz-message" data-dz-message>
                                    <span>Kéo tệp vào hoặc chọn tệp cần tải lên</span>
                                    <span class="btn btn-primary">Chọn file</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <div id="link_url">
                            </div>
                        </div>
                    </div>

                }

            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")
    <script>
        Dropzone.autoDiscover = false;
        $("#dZUpload").dropzone({
            url: "/Links/SaveUploadedFile",
            addRemoveLinks: true,
            maxFiles: 1,
            maxFilesize: 20,
            uploadMultiple: false,
            acceptedFiles: "image/*",
            dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
            dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
            dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
            dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
            dictResponseError: "Server responded with {{statusCode}} code.",
            dictCancelUpload: "Hủy tải lên",
            dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
            dictRemoveFile: "Loại bỏ tệp tin",
            dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
            success: function (file, response) {
                var imgName = response.Message;
                file.previewElement.classList.add("dz-success");
                $('#link_url').html(imgName);
            },
            error: function (file, response) {
                file.previewElement.classList.add("dz-error");
                $(file.previewElement).find('.dz-error-message').text(response);
            }
        });
    </script>
}





