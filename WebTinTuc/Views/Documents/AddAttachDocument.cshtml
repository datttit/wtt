@model WebTinTuc.Models.DocumentDetail
@{
    ViewBag.Title = "Thêm đính kèm tài liệu";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section styles {
    @Styles.Render("~/Content/dropzonescss")
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3>@ViewBag.Title</h3>
        </div>
        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

    </div>
</div>

@if (Model != null)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default box box-primary">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h3>@Model.DetailName</h3>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.HiddenFor(m => m.DetailId)
                                @Html.HiddenFor(m => m.Document.DocumentName, htmlAttributes: new { @id = "document-name"})
                                <div id="dZUpload" class="dropzone">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Kéo tệp vào hoặc chọn tệp cần tải lên</span>
                                        <span class="btn btn-primary">Chọn file</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (Model.AttachModels.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Số thứ tự</th>
                                        <th>Tên file</th>
                                        <th>Đường dẫn</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int i = 1;}
                                    @foreach (var item in Model.AttachModels)
                                    {
                                        <tr>
                                            <td>@i</td>
                                            <td>@Html.Raw(item.AttachFileName)</td>
                                            <td>@Html.Raw(item.AttachFilePath)</td>
                                            <td>
                                                @Html.ActionLink("Sửa", "EditAttach", new { id = item.AttachId }) 
                                                @Html.ActionLink("Xóa", "DeleleAttach", new { id = item.AttachId }) 
                                            </td>
                                        </tr>
                                        i++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                       <span>Chưa có tệp đính kèm</span>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <span>Không tìm thấy tài liệu.</span>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")
    @if (Model != null)
    {
        <script>
            $(document).ready(function () {
                Dropzone.autoDiscover = false;
                $("#dZUpload").dropzone({
                    url: "/Documents/SaveFileAttach",
                    addRemoveLinks: true,
                    maxFiles: 1,
                    maxFilesize: 50,
                    uploadMultiple: false,                    
                    accept: function (file, done) {
                        if (getExtension(file.name) == "exe" || getExtension(file.name) == "dll" || getExtension(file.name) == "iso") {
                            done("Tệp này không được phép tải lên.");
                        }
                        else { done(); }
                    },
                    sending: function (file, xhr, formData) {
                        formData.append("DetailId", $("#DetailId").val());
                        formData.append("DocumentName", $('#document-name').val())
                    },
                    dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                    dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                    dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                    dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                    dictResponseError: "Server responded with {{statusCode}} code.",
                    dictCancelUpload: "Hủy tải lên",
                    dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                    dictRemoveFile: "Loại bỏ tệp tin",
                    dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                    success: function (file, response) {
                        file.previewElement.classList.add("dz-success");
                        if (response) {
                            alert(response.Message + ' đã đính kèm thành công.');
                            window.location.href = "/Documents/AddAttachDocument/" + response.id;
                        }
                    },
                    error: function (file, response) {
                        file.previewElement.classList.add("dz-error");
                        $(file.previewElement).find('.dz-error-message').text(response);
                    }
                });

            })

        </script>
    }


}


